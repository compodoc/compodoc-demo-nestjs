var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.818,1,2.461]],["body/controllers/AppController.html",[0,1.343,1,4.04,2,0.289,3,0.289,4,0.206,5,4.41,6,2.923,7,4.41,8,0.425,9,1.546,10,6.199,11,1.54,12,0.027,13,0.745,14,4.41,15,1.546,16,0.998,17,0.629,18,1.54,19,4.41,20,0.247,21,0.017,22,4.41,23,4.41,24,0.022,25,0.022]],["title/modules/ApplicationModule.html",[26,1.083,27,2.205]],["body/modules/ApplicationModule.html",[0,1.103,1,3.791,2,0.214,3,0.214,4,0.152,12,0.027,17,0.913,18,1.14,20,0.251,21,0.013,24,0.018,25,0.018,26,1.797,27,4.32,28,1.795,29,1.795,30,1.795,31,1.526,32,1.651,33,2.752,34,2.752,35,3.593,36,3.593,37,3.593,38,2.794,39,2.466,40,1.795,41,1.651,42,3.263,43,3.263,44,3.263,45,2.163,46,1.962,47,1.962,48,4.321,49,1.795,50,3.263,51,3.263,52,3.263,53,1.795,54,1.795,55,1.223]],["title/controllers/ArticleController.html",[0,0.818,56,2.461]],["body/controllers/ArticleController.html",[0,0.486,2,0.075,3,0.075,4,0.053,6,0.76,8,0.11,9,0.56,11,1.694,12,0.027,13,0.819,15,1.689,17,0.617,18,0.4,20,0.064,21,0.005,24,0.008,25,0.008,54,0.63,55,0.43,56,1.463,57,1.146,58,2.976,59,3.401,60,3.202,61,1.977,62,3.349,63,1.977,64,1.922,65,1.667,66,1.977,67,1.977,68,1.977,69,3.496,70,2.828,71,1.146,72,1.623,73,2.189,74,2.714,75,4.526,76,3.496,77,5.212,78,2.5,79,5.212,80,1.977,81,5.396,82,1.146,83,1.146,84,1.954,85,1.954,86,0.368,87,1.473,88,3.202,89,1.146,90,3.099,91,2.054,92,1.977,93,1.248,94,1.146,95,1.146,96,2.523,97,0.967,98,1.977,99,1.146,100,1.146,101,3.202,102,1.146,103,1.146,104,1.146,105,1.146,106,1.146,107,1.146,108,1.146,109,1.146,110,1.146,111,3.099,112,1.146,113,1.146,114,4.327,115,2.868,116,1.146,117,1.977,118,1.146,119,1.146,120,1.977,121,1.146,122,1.146,123,1.146,124,1.146,125,1.146,126,1.146,127,1.146,128,1.146,129,1.146,130,1.146,131,1.146,132,1.146,133,1.146,134,1.146,135,1.463,136,0.462,137,0.967,138,0.76,139,0.689,140,2.197,141,0.967,142,0.967,143,0.58,144,0.58,145,1.977,146,0.58,147,0.43,148,0.967,149,0.76,150,1.31,151,5.549,152,4.699,153,0.76,154,1.146,155,1.146,156,2.378,157,5.476,158,1.146,159,2.379,160,1.146,161,1.146,162,1.146,163,1.146,164,1.146,165,4.327,166,1.146,167,1.977,168,1.146,169,1.146,170,1.146,171,1.146,172,0.848,173,1.146,174,1.146,175,1.146,176,0.967,177,1.146,178,1.146,179,1.146,180,1.146,181,1.146,182,1.146,183,1.146,184,0.63,185,1,186,1.146,187,1.146,188,1.146,189,1.977,190,1.146,191,1.146,192,1.146,193,1.146,194,1.977,195,1.146,196,1.146,197,1.146]],["title/interfaces/ArticleData.html",[73,1.683,198,0.708]],["body/interfaces/ArticleData.html",[2,0.19,3,0.19,4,0.135,8,0.279,12,0.027,16,1.2,17,0.589,20,0.269,24,0.016,25,0.016,58,2.09,64,2.882,72,1.706,73,2.09,78,2.11,86,0.602,87,1.97,93,1.937,96,2.45,136,2.23,143,1.468,144,1.468,146,1.468,156,2.652,198,1.225,199,1.744,200,0.879,201,2.45,202,3.473,203,3.473,204,2.882,205,3.473,206,2.271,207,3.461,208,2.434,209,1.922,210,1.937,211,1.595,212,1.922]],["title/classes/ArticleEntity.html",[21,0.013,210,1.34]],["body/classes/ArticleEntity.html",[2,0.144,3,0.144,4,0.102,8,0.211,9,0.95,11,2.104,12,0.027,13,1.017,15,0.62,16,1.138,17,0.582,20,0.123,21,0.013,24,0.013,25,0.013,49,1.204,60,3.381,70,3.381,72,1.692,78,1.841,86,0.587,93,2.352,96,2.137,136,1.841,147,0.821,156,2.312,185,2.312,200,0.714,201,2.137,204,2.513,207,3.253,210,1.351,213,1.846,214,4.57,215,4.57,216,2.304,217,1.846,218,3.381,219,2.189,220,4.383,221,2.189,222,1.846,223,3.354,224,2.189,225,2.189,226,3.354,227,4.57,228,3.381,229,2.189,230,2.189,231,2.223,232,2.189,233,2.451,234,2.189,235,3.253,236,2.189,237,3.354,238,2.828,239,2.189,240,2.189,241,2.189,242,4.077,243,2.189,244,1.108,245,1.316,246,2.189,247,1.846,248,1.846,249,3.354,250,2.189,251,1.62,252,1.846,253,2.189,254,3.354,255,2.189,256,1.316,257,1.846,258,2.189,259,1.846,260,2.189,261,2.189]],["title/modules/ArticleModule.html",[26,1.083,35,2]],["body/modules/ArticleModule.html",[0,1.003,2,0.187,3,0.187,4,0.133,9,1.738,12,0.027,13,0.481,15,0.807,17,0.908,18,0.995,20,0.228,21,0.011,24,0.016,25,0.016,26,1.693,28,1.568,29,1.568,30,1.568,31,1.333,32,1.442,35,3.441,38,2.676,39,2.243,40,1.568,41,1.442,45,1.889,46,1.714,47,1.714,53,1.568,56,3.524,84,1.148,85,1.148,86,0.274,87,0.866,93,1.643,140,3.439,141,2.403,210,1.148,211,1.568,216,1.907,244,1.442,251,2.109,252,2.403,262,2.85,263,2.85,264,2.85,265,2.703,266,1.889,267,2.703,268,3.446,269,2.85,270,2.703,271,2.703,272,1.889,273,2.85,274,2.452,275,2.85,276,1.568,277,2.403,278,2.85,279,1.568,280,2.109,281,2.85,282,5.082,283,2.85,284,2.403,285,2.85,286,4.763,287,4.079,288,4.763,289,2.403,290,2.85,291,2.85,292,4.079]],["title/interfaces/ArticleRO.html",[144,1.683,198,0.708]],["body/interfaces/ArticleRO.html",[2,0.245,3,0.245,4,0.175,8,0.36,12,0.027,16,1.137,17,0.702,20,0.307,24,0.019,25,0.019,58,3.066,64,2.059,72,1.602,73,1.894,78,1.508,86,0.36,93,2.212,96,1.751,136,1.981,143,1.894,144,2.489,146,1.894,156,1.894,198,1.323,199,2.251,200,1.046,201,1.751,202,2.481,203,2.481,204,2.059,205,2.481,206,2.132,207,2.957,208,1.894,209,2.481,210,2.44,211,2.059,212,2.481]],["title/interfaces/ArticlesRO.html",[143,1.683,198,0.708]],["body/interfaces/ArticlesRO.html",[2,0.239,3,0.239,4,0.17,8,0.351,12,0.027,16,1.129,17,0.69,20,0.303,24,0.019,25,0.019,58,3.04,64,2.006,72,1.88,73,1.846,78,1.469,86,0.465,93,2.184,96,1.706,136,1.947,143,2.446,144,1.846,146,1.846,156,1.846,198,1.314,199,2.193,200,1.029,201,1.706,202,2.417,203,2.417,204,2.006,205,2.417,206,2.096,207,2.907,208,1.846,209,2.417,210,2.42,211,2.006,212,3.827]],["title/classes/AuthMiddleware.html",[21,0.013,276,1.829]],["body/classes/AuthMiddleware.html",[2,0.194,3,0.194,4,0.138,8,0.284,9,1.184,12,0.027,13,0.706,15,1.184,17,0.849,18,1.031,20,0.165,21,0.017,24,0.017,25,0.017,54,1.624,55,1.107,59,1.624,84,1.189,85,1.189,86,0.284,87,0.897,138,3.219,139,1.775,147,1.568,159,1.624,184,2.671,201,1.38,231,1.957,244,2.116,256,2.514,276,2.3,279,2.3,293,2.489,294,4.856,295,5.282,296,2.489,297,2.952,298,3.838,299,2.952,300,2.952,301,2.184,302,2.489,303,4.182,304,2.489,305,2.952,306,2.952,307,2.952,308,2.772,309,4.856,310,4.856,311,2.489,312,3.094,313,2.489,314,2.184,315,3.526,316,4.182,317,4.856,318,4.095,319,3.526,320,2.3,321,2.184,322,2.184,323,2.489,324,2.952,325,3.094,326,2.952,327,2.489,328,4.182,329,2.489,330,2.952,331,2.952]],["title/classes/BaseController.html",[21,0.013,332,2.461]],["body/classes/BaseController.html",[2,0.262,3,0.262,4,0.187,8,0.385,9,1.454,12,0.027,13,0.867,15,1.606,17,0.733,20,0.224,21,0.02,24,0.02,25,0.02,84,1.611,85,1.611,87,1.215,184,2.824,201,2.401,296,4.782,308,2.652,311,3.373,312,3.8,313,3.373,320,2.2,321,2.96,322,2.96,323,3.373,332,3.8,333,3.373,334,4.782,335,5.135,336,4.001,337,5.135,338,4.001,339,3.373,340,4.001,341,4.001]],["title/classes/Comment.html",[21,0.013,93,1.34]],["body/classes/Comment.html",[2,0.245,3,0.245,4,0.175,8,0.36,11,1.918,12,0.027,13,0.927,16,1.004,17,0.702,20,0.21,21,0.019,24,0.019,25,0.019,49,2.059,58,3.066,72,1.789,86,0.529,93,1.981,136,2.35,185,2.952,200,1.046,210,2.44,211,2.059,217,3.157,218,2.77,233,3.303,235,3.303,245,2.957,247,3.157,257,3.157,342,3.157,343,3.744,344,3.744,345,3.744,346,3.744]],["title/interfaces/CommentsRO.html",[146,1.683,198,0.708]],["body/interfaces/CommentsRO.html",[2,0.245,3,0.245,4,0.175,8,0.36,12,0.027,16,1.137,17,0.702,20,0.307,24,0.019,25,0.019,58,2.489,64,2.059,72,1.602,73,1.894,78,1.508,86,0.36,93,2.591,96,1.751,136,1.981,143,1.894,144,1.894,146,2.489,156,1.894,198,1.323,199,2.251,200,1.046,201,1.751,202,2.481,203,2.481,204,2.059,205,2.481,206,2.132,207,2.957,208,1.894,209,2.481,210,2.212,211,2.059,212,2.481]],["title/classes/CreateArticleDto.html",[21,0.013,74,2.205]],["body/classes/CreateArticleDto.html",[2,0.249,3,0.249,4,0.177,8,0.366,12,0.026,13,0.991,16,1.22,20,0.213,21,0.02,24,0.02,25,0.02,55,2.502,74,3.293,78,2.363,86,0.565,136,2.363,156,2.97,200,1.057,204,3.227,347,4.506,348,3.205,349,3.801,350,3.801,351,3.801,352,3.801]],["title/classes/CreateCommentDto.html",[21,0.013,91,2.205]],["body/classes/CreateCommentDto.html",[2,0.301,3,0.301,4,0.214,8,0.442,12,0.026,13,0.776,16,1.104,20,0.257,21,0.022,24,0.022,25,0.022,55,2.264,86,0.442,91,3.711,136,2.532,200,1.191,347,4.143,353,3.874,354,4.594]],["title/classes/CreateUserDto.html",[21,0.013,355,2.205]],["body/classes/CreateUserDto.html",[2,0.246,3,0.246,4,0.175,8,0.362,11,1.922,12,0.026,13,0.929,16,1.19,17,0.536,20,0.21,21,0.022,24,0.02,25,0.02,55,2.441,86,0.53,200,1.049,355,3.268,356,4.926,357,2.491,358,2.732,359,4.323,360,2.533,361,5.35,362,3.169,363,3.758,364,3.169,365,2.067]],["title/classes/FollowsEntity.html",[21,0.013,274,2]],["body/classes/FollowsEntity.html",[2,0.244,3,0.244,4,0.173,8,0.358,11,1.911,12,0.027,13,0.924,17,0.83,20,0.208,21,0.022,24,0.019,25,0.019,49,2.043,72,2.116,86,0.527,185,2.943,200,1.041,233,3.29,235,3.634,245,2.234,274,2.943,365,2.692,366,3.133,367,5.817,368,5.817,369,3.716,370,3.716,371,3.716,372,2.749,373,3.621,374,3.133,375,3.716,376,3.716]],["title/classes/LoginUserDto.html",[21,0.013,377,2.205]],["body/classes/LoginUserDto.html",[2,0.265,3,0.265,4,0.189,8,0.39,11,1.807,12,0.026,13,0.874,16,1.161,17,0.578,20,0.227,21,0.023,24,0.02,25,0.02,55,2.381,86,0.498,200,1.101,357,2.684,358,2.811,359,4.448,361,5.237,362,3.415,364,3.415,365,2.227,377,3.43,378,4.81]],["title/controllers/ProfileController.html",[0,0.818,379,2.461]],["body/controllers/ProfileController.html",[0,0.971,2,0.179,3,0.179,4,0.127,6,1.806,8,0.262,9,1.118,11,1.622,12,0.027,13,0.784,15,1.596,16,1.153,17,0.804,18,0.952,20,0.152,21,0.011,24,0.016,25,0.016,54,1.499,55,1.021,59,3.337,62,2.016,72,1.835,84,1.87,85,1.87,86,0.447,87,1.41,88,3.768,101,2.016,115,3.736,135,2.016,138,1.806,139,1.638,147,1.021,148,2.298,149,1.806,150,2.617,153,1.806,159,2.554,358,1.846,360,2.735,379,2.922,380,2.725,381,2.016,382,2.617,383,3.949,384,3.949,385,2.725,386,3.949,387,2.725,388,2.725,389,3.949,390,2.725,391,2.725,392,3.949,393,2.725,394,3.916,395,2.298,396,1.638,397,2.725,398,2.725,399,2.725,400,2.725,401,4.644,402,2.725,403,2.725,404,2.725,405,2.725,406,2.725]],["title/interfaces/ProfileData.html",[198,0.708,407,2.205]],["body/interfaces/ProfileData.html",[2,0.263,3,0.263,4,0.187,8,0.387,12,0.026,16,1.205,20,0.288,24,0.02,25,0.02,86,0.577,87,1.82,198,1.209,200,1.095,208,2.875,360,2.598,381,2.972,382,3.972,396,2.415,407,3.766,408,2.972,409,3.032,410,2.802]],["title/modules/ProfileModule.html",[26,1.083,36,2]],["body/modules/ProfileModule.html",[0,1.111,2,0.216,3,0.216,4,0.154,9,1.279,12,0.027,13,0.556,15,0.933,17,0.915,18,1.151,20,0.288,21,0.013,24,0.018,25,0.018,26,1.804,28,1.812,29,1.812,30,1.812,31,1.541,32,1.668,36,3.604,38,2.803,39,2.483,40,1.812,41,1.668,45,2.184,46,1.981,47,1.981,53,1.812,84,1.327,85,1.327,86,0.317,87,1.001,216,1.541,244,1.668,251,2.439,265,2.993,266,2.184,267,2.993,268,3.672,270,2.993,271,2.993,272,2.184,274,2.715,276,1.812,277,2.779,279,1.812,280,2.439,379,3.811,394,3.807,395,2.779,411,3.296,412,3.296,413,3.296,414,3.296,415,3.296,416,3.296,417,2.779,418,2.779,419,3.296,420,3.296]],["title/interfaces/ProfileRO.html",[198,0.708,396,2]],["body/interfaces/ProfileRO.html",[2,0.293,3,0.293,4,0.209,8,0.43,12,0.026,16,1.091,20,0.308,24,0.022,25,0.022,86,0.43,198,1.269,200,1.171,208,2.262,360,1.937,381,4.608,382,2.962,396,3.31,407,4.128,408,3.307,409,2.262,410,2.09]],["title/controllers/TagController.html",[0,0.818,421,2.461]],["body/controllers/TagController.html",[0,1.257,2,0.26,3,0.26,4,0.185,6,2.63,8,0.382,9,1.447,11,1.386,12,0.027,13,0.67,15,1.447,17,0.851,18,1.386,20,0.222,21,0.016,24,0.02,25,0.02,54,2.182,55,1.488,59,3.107,65,5.03,115,3.386,149,2.63,150,3.386,153,2.63,159,2.182,421,3.78,422,3.969,423,3.346,424,3.969,425,2.386,426,3.346,427,4.764,428,3.346,429,3.969,430,3.969,431,3.969]],["title/classes/TagEntity.html",[21,0.013,425,2]],["body/classes/TagEntity.html",[2,0.259,3,0.259,4,0.184,8,0.381,11,1.78,12,0.026,13,0.86,16,1.031,17,0.85,20,0.221,21,0.022,24,0.02,25,0.02,49,2.174,72,1.836,86,0.491,185,3.014,200,1.084,233,3.39,235,3.39,245,2.376,365,2.802,372,2.925,373,3.77,374,4.297,423,5.023,425,3.064,432,3.333,433,3.953,434,3.953,435,3.333,436,3.953]],["title/modules/TagModule.html",[26,1.083,37,2]],["body/modules/TagModule.html",[0,1.139,2,0.224,3,0.224,4,0.16,9,0.969,12,0.027,13,0.578,15,0.969,17,0.9,18,1.195,20,0.294,21,0.014,24,0.018,25,0.018,26,1.832,28,1.881,29,1.881,30,1.881,31,1.6,32,1.731,37,3.644,38,2.834,39,2.547,40,1.881,41,1.731,45,2.267,46,2.057,47,2.057,53,1.881,84,1.378,85,1.378,86,0.329,87,1.039,244,1.731,265,3.07,266,2.267,267,3.07,268,3.73,270,2.267,271,3.07,272,2.267,279,1.881,421,3.885,425,2.057,426,2.884,427,3.905,428,2.884,437,3.421,438,3.421,439,3.421,440,3.421,441,3.421,442,3.421]],["title/classes/UpdateUserDto.html",[21,0.013,443,2.205]],["body/classes/UpdateUserDto.html",[2,0.249,3,0.249,4,0.177,8,0.366,12,0.026,13,0.991,16,1.22,20,0.213,21,0.02,24,0.02,25,0.02,55,2.502,86,0.565,200,1.057,357,2.519,358,2.744,360,2.544,409,2.97,410,2.744,443,3.293,444,5.135,445,3.801,446,3.801,447,3.801,448,3.801]],["title/controllers/UserController.html",[0,0.818,449,2.461]],["body/controllers/UserController.html",[0,1.012,2,0.118,3,0.118,4,0.084,8,0.174,9,0.817,11,1.571,12,0.027,13,0.759,15,1.565,16,0.659,17,0.789,18,0.631,20,0.101,21,0.007,24,0.011,25,0.011,54,0.993,55,0.677,59,3.291,60,3.045,62,3.328,70,3.328,72,1.173,78,1.451,84,1.811,85,1.811,86,0.396,87,1.366,88,2.666,97,1.523,101,3.988,115,2.727,135,1.337,136,0.728,137,1.523,138,1.197,139,1.086,142,1.523,147,2.354,149,1.197,150,1.913,153,1.197,159,2.474,176,1.523,184,2.474,185,1.46,206,2.266,216,0.845,256,1.086,298,2.388,301,2.135,302,1.523,314,1.337,320,1.587,325,1.337,327,1.523,355,2.727,358,2.52,360,1.251,377,3.179,409,1.46,410,1.349,443,2.727,449,2.135,450,1.806,451,2.886,452,2.886,453,1.806,454,4.115,455,1.806,456,1.806,457,2.727,458,2.886,459,1.806,460,1.806,461,2.886,462,1.806,463,2.886,464,1.806,465,1.806,466,1.806,467,1.806,468,2.886,469,1.806,470,1.806,471,1.523,472,1.086,473,1.806,474,1.806,475,2.388,476,1.806,477,1.806,478,1.806,479,1.806,480,1.806,481,1.806,482,1.806,483,1.806,484,1.806,485,1.806,486,1.806,487,1.806,488,1.806,489,3.603,490,1.806,491,2.433,492,1.806,493,1.806]],["title/interfaces/UserData.html",[198,0.708,206,1.442]],["body/interfaces/UserData.html",[2,0.227,3,0.227,4,0.162,8,0.334,12,0.027,16,1.223,20,0.262,24,0.019,25,0.019,78,1.397,86,0.569,87,1.42,147,2.121,198,1.125,200,0.995,206,2.292,320,3.347,358,2.846,360,2.638,409,2.864,410,2.646,457,2.299,472,2.085,494,2.567,495,3.942,496,3.942,497,3.459]],["title/classes/UserEntity.html",[21,0.013,216,1.555]],["body/classes/UserEntity.html",[2,0.157,3,0.157,4,0.112,8,0.231,9,1.017,11,2.05,12,0.027,13,0.991,15,0.678,16,1.157,17,0.683,20,0.134,21,0.017,24,0.014,25,0.014,49,1.318,58,2.824,64,2.631,72,1.403,78,0.965,86,0.552,147,1.346,185,2.421,200,0.764,210,2.364,216,1.679,218,1.773,220,3.028,222,2.02,228,2.657,233,2.59,235,3.45,244,1.212,245,2.59,248,2.02,259,2.02,358,2.237,359,3.982,360,2.333,365,1.975,372,2.657,373,3.187,409,2.421,410,2.237,435,3.632,498,2.02,499,4.785,500,2.396,501,3.591,502,2.396,503,2.396,504,2.396,505,2.396,506,2.396,507,2.396,508,2.396,509,2.396,510,2.396,511,2.396,512,3.591,513,2.396,514,2.396,515,2.396,516,3.591,517,2.396,518,2.396,519,2.396,520,2.396]],["title/modules/UserModule.html",[26,1.083,38,1.555]],["body/modules/UserModule.html",[0,1.116,2,0.217,3,0.217,4,0.155,9,1.464,12,0.027,13,0.56,15,0.94,17,0.877,18,1.159,20,0.311,21,0.013,24,0.018,25,0.018,26,1.809,28,1.825,29,1.825,30,1.825,31,1.551,32,1.679,38,2.72,39,2.495,40,1.825,41,1.679,46,1.995,47,1.995,53,1.825,84,1.336,85,1.336,86,0.319,87,1.008,147,1.7,216,1.551,244,1.679,265,3.006,266,2.199,267,3.006,268,3.683,270,3.006,271,3.006,272,2.199,276,1.825,279,1.825,280,2.455,282,2.798,284,2.798,289,2.798,298,4.149,314,2.455,417,2.798,418,2.798,449,3.824,471,2.798,521,2.798,522,2.798,523,3.318,524,3.318,525,3.318,526,2.798]],["title/interfaces/UserRO.html",[198,0.708,472,2]],["body/interfaces/UserRO.html",[2,0.264,3,0.264,4,0.188,8,0.388,12,0.027,16,1.134,20,0.289,24,0.02,25,0.02,86,0.388,147,2.325,198,1.211,200,1.098,206,2.602,320,2.839,358,2.414,360,2.237,409,2.041,410,1.886,472,3.103,494,2.984,495,3.401,496,3.401,497,2.984]],["title/pipes/ValidationPipe.html",[475,2.205,527,2.205]],["body/pipes/ValidationPipe.html",[2,0.177,3,0.177,4,0.126,9,0.765,12,0.027,13,0.78,15,1.642,16,0.494,17,0.724,18,0.944,20,0.151,21,0.018,24,0.02,25,0.016,59,2.159,72,0.88,84,1.862,85,1.862,86,0.445,87,1.404,159,1.486,184,2.963,208,2.339,231,1.791,238,2.279,256,2.36,279,1.486,301,2,304,2.279,325,2.905,365,2.542,457,2.602,475,2.602,491,3.898,527,3.064,528,2.279,529,5.388,530,5.073,531,2.703,532,3.925,533,2.703,534,2.703,535,3.925,536,2.703,537,5.073,538,3.925,539,3.925,540,5.073,541,2.703,542,4.543,543,3.925,544,2.703,545,2.703,546,2.703,547,2.703,548,2.703,549,2.703,550,3.925,551,2.703,552,2.703,553,2.703,554,2.703,555,2.703,556,2.703,557,2.703,558,2.703,559,2.703,560,2.703,561,2.703,562,2.703,563,2.703,564,2.703,565,2.703,566,2.703]],["title/coverage.html",[567,3.831]],["body/coverage.html",[4,0.13,12,0.027,21,0.025,24,0.016,25,0.016,31,1.303,73,1.41,74,1.847,86,0.268,91,1.847,93,1.616,96,1.303,143,1.41,144,1.41,146,1.41,147,1.044,198,1.298,199,3.278,206,1.208,210,1.122,213,2.349,216,1.303,231,4.459,256,1.675,274,1.675,276,1.532,293,2.349,308,1.847,332,2.062,333,2.349,342,2.349,347,2.969,348,2.349,353,2.349,355,1.847,356,2.349,357,3.117,366,2.349,377,1.847,378,2.349,396,1.675,407,1.847,408,2.969,425,1.675,432,2.349,443,1.847,444,2.349,472,1.675,475,1.847,494,2.969,498,2.349,527,1.847,528,2.349,567,2.349,568,2.062,569,2.786,570,2.786,571,2.786,572,2.786,573,5.679,574,5.453,575,2.349,576,3.48,577,5.453,578,4.703,579,4.703,580,2.349,581,2.062,582,2.349,583,2.786,584,2.786,585,2.786,586,2.786,587,2.349,588,2.786,589,2.786]],["title/miscellaneous/functions.html",[581,2.961,590,1.84]],["body/miscellaneous/functions.html",[8,0.492,12,0.024,24,0.024,25,0.024,31,2.956,580,4.313,581,3.785,590,3.391,591,5.115]],["title/index.html",[8,0.267,172,2.054,592,2.34]],["body/index.html",[0,1.135,9,1.307,12,0.024,21,0.018,24,0.022,25,0.022,53,2.538,198,0.982,200,0.982,410,2.158,568,4.155,593,4.735,594,6.052,595,4.615,596,4.615,597,5.615,598,4.615,599,4.615,600,4.615,601,4.615,602,4.615,603,4.615,604,4.615,605,4.615,606,4.615,607,4.615]],["title/license.html",[172,2.054,592,2.34,608,2.34]],["body/license.html",[4,0.167,12,0.019,24,0.019,25,0.019,32,1.806,41,1.806,48,3.009,139,2.145,201,1.669,382,2.365,497,3.526,568,2.641,593,3.009,608,3.009,609,3.569,610,5.364,611,3.569,612,3.569,613,4.765,614,3.569,615,3.569,616,3.569,617,3.569,618,3.569,619,5.724,620,6.445,621,3.569,622,4.765,623,5.364,624,3.569,625,5.364,626,4.765,627,3.569,628,4.765,629,3.569,630,3.569,631,3.569,632,3.569,633,3.569,634,3.569,635,3.569,636,3.569,637,3.569,638,3.569,639,3.569,640,3.569,641,4.765,642,4.765,643,3.569,644,3.569,645,4.765,646,3.569,647,3.569,648,3.569,649,3.569,650,3.569,651,3.569,652,3.569,653,3.569,654,3.569,655,3.569,656,3.569,657,3.569,658,3.569,659,3.569,660,3.569,661,3.569,662,3.569,663,3.569,664,3.569]],["title/modules.html",[26,1.48]],["body/modules.html",[12,0.022,24,0.022,25,0.022,26,1.524,27,3.102,35,2.814,36,2.814,37,2.814,38,2.189,665,6.479,666,6.479,667,6.479,668,6.479]],["title/overview.html",[669,3.831]],["body/overview.html",[0,0.953,12,0.026,20,0.217,21,0.015,24,0.02,25,0.02,26,1.638,27,4.379,28,2.131,29,2.131,30,2.131,31,1.812,32,1.961,33,3.268,34,3.268,35,3.684,36,3.684,37,3.684,38,2.989,39,2.767,40,2.131,41,1.961,198,0.824,298,3.919,321,2.868,521,3.268,522,3.268,527,2.569,669,3.268,670,5.031,671,3.876,672,3.876]],["title/miscellaneous/variables.html",[576,2.961,590,1.84]],["body/miscellaneous/variables.html",[8,0.352,12,0.027,15,1.373,24,0.019,25,0.019,87,1.112,96,2.54,147,2.255,184,2.665,228,4.02,308,3.833,312,2.709,315,3.087,318,4.087,319,3.087,320,2.665,322,2.709,329,4.087,334,4.087,339,3.087,457,3.212,526,3.087,542,4.581,575,3.087,576,2.709,582,3.087,587,3.087,590,2.426,673,3.661,674,3.661,675,3.661,676,3.661,677,3.661,678,3.661,679,4.846,680,3.661,681,3.661,682,3.661,683,3.661,684,3.661,685,3.661,686,3.661,687,3.661,688,3.661,689,3.661]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":231,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/AuthMiddleware.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{}}}],["0/1",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":321,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"overview.html":{}}}],["100",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":671,"title":{},"body":{"overview.html":{}}}],["200",{"_index":111,"title":{},"body":{"controllers/ArticleController.html":{}}}],["201",{"_index":77,"title":{},"body":{"controllers/ArticleController.html":{}}}],["2019",{"_index":612,"title":{},"body":{"license.html":{}}}],["4/10",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["403",{"_index":81,"title":{},"body":{"controllers/ArticleController.html":{}}}],["5",{"_index":670,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":672,"title":{},"body":{"overview.html":{}}}],["_user",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["abov",{"_index":640,"title":{},"body":{"license.html":{}}}],["action",{"_index":660,"title":{},"body":{"license.html":{}}}],["afterupd",{"_index":250,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["and/or",{"_index":634,"title":{},"body":{"license.html":{}}}],["api",{"_index":7,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth",{"_index":150,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apioper",{"_index":152,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apioperation({titl",{"_index":75,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apirespons",{"_index":151,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apiusetag",{"_index":149,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["apiusetags('articl",{"_index":154,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apiusetags('profil",{"_index":398,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apiusetags('tag",{"_index":429,"title":{},"body":{"controllers/TagController.html":{}}}],["apiusetags('us",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":602,"title":{},"body":{"index.html":{}}}],["app.control",{"_index":43,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["appcontrol",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{}}}],["applicationmodul",{"_index":27,"title":{"modules/ApplicationModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules.html":{},"overview.html":{}}}],["apply(authmiddlewar",{"_index":280,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["architectur",{"_index":605,"title":{},"body":{"index.html":{}}}],["argumentmetadata",{"_index":540,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["aris",{"_index":664,"title":{},"body":{"license.html":{}}}],["array",{"_index":238,"title":{},"body":{"classes/ArticleEntity.html":{},"pipes/ValidationPipe.html":{}}}],["articl",{"_index":58,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{}}}],["article'})@apiresponse({statu",{"_index":76,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.author",{"_index":520,"title":{},"body":{"classes/UserEntity.html":{}}}],["article.com",{"_index":346,"title":{},"body":{"classes/Comment.html":{}}}],["article.control",{"_index":273,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.dto.t",{"_index":348,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:2",{"_index":352,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:3",{"_index":350,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:4",{"_index":349,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:5",{"_index":351,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.ent",{"_index":211,"title":{},"body":{"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{}}}],["article.interfac",{"_index":145,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.servic",{"_index":141,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article/article.ent",{"_index":514,"title":{},"body":{"classes/UserEntity.html":{}}}],["article/article.modul",{"_index":44,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["articlecontrol",{"_index":56,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["articledata",{"_index":73,"title":{"interfaces/ArticleData.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["articleent",{"_index":210,"title":{"classes/ArticleEntity.html":{}},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["articlemodul",{"_index":35,"title":{"modules/ArticleModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articlero",{"_index":144,"title":{"interfaces/ArticleRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["articles'})@apiresponse({statu",{"_index":110,"title":{},"body":{"controllers/ArticleController.html":{}}}],["articles.'})@get",{"_index":112,"title":{},"body":{"controllers/ArticleController.html":{}}}],["articles/:slug/com",{"_index":290,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/comments/:id",{"_index":291,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articles/:slug/favorit",{"_index":292,"title":{},"body":{"modules/ArticleModule.html":{}}}],["articlescount",{"_index":212,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["articleservic",{"_index":140,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["articlesro",{"_index":143,"title":{"interfaces/ArticlesRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["associ",{"_index":621,"title":{},"body":{"license.html":{}}}],["async",{"_index":59,"title":{},"body":{"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"pipes/ValidationPipe.html":{}}}],["aticl",{"_index":285,"title":{},"body":{"modules/ArticleModule.html":{}}}],["aticles/:slug",{"_index":287,"title":{},"body":{"modules/ArticleModule.html":{}}}],["aticles/fe",{"_index":283,"title":{},"body":{"modules/ArticleModule.html":{}}}],["auth",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.middlewar",{"_index":526,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["authmiddlewar",{"_index":276,"title":{"classes/AuthMiddleware.html":{}},"body":{"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["author",{"_index":201,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"interfaces/CommentsRO.html":{},"license.html":{}}}],["authorization.split",{"_index":340,"title":{},"body":{"classes/BaseController.html":{}}}],["avatar",{"_index":496,"title":{},"body":{"interfaces/UserData.html":{},"interfaces/UserRO.html":{}}}],["await",{"_index":159,"title":{},"body":{"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{},"pipes/ValidationPipe.html":{}}}],["badrequestexcept",{"_index":544,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["badrequestexception('no",{"_index":547,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["basecontrol",{"_index":332,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["beforeinsert",{"_index":435,"title":{},"body":{"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["beforeupd",{"_index":242,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["bio",{"_index":409,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{}}}],["biographi",{"_index":495,"title":{},"body":{"interfaces/UserData.html":{},"interfaces/UserRO.html":{}}}],["bodi",{"_index":136,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"controllers/UserController.html":{}}}],["body('articl",{"_index":167,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('com",{"_index":180,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('us",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":208,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"pipes/ValidationPipe.html":{}}}],["bootstrap",{"_index":31,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brows",{"_index":668,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":665,"title":{},"body":{"modules.html":{}}}],["builderror",{"_index":531,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["builderror(error",{"_index":532,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["c",{"_index":611,"title":{},"body":{"license.html":{}}}],["case",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":173,"title":{},"body":{"controllers/ArticleController.html":{}}}],["charg",{"_index":617,"title":{},"body":{"license.html":{}}}],["claim",{"_index":656,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/ArticleEntity.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cluster_applicationmodul",{"_index":33,"title":{},"body":{"modules/ApplicationModule.html":{},"overview.html":{}}}],["cluster_applicationmodule_import",{"_index":34,"title":{},"body":{"modules/ApplicationModule.html":{},"overview.html":{}}}],["cluster_articlemodul",{"_index":262,"title":{},"body":{"modules/ArticleModule.html":{}}}],["cluster_articlemodule_import",{"_index":263,"title":{},"body":{"modules/ArticleModule.html":{}}}],["cluster_profilemodul",{"_index":411,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_import",{"_index":412,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_tagmodul",{"_index":437,"title":{},"body":{"modules/TagModule.html":{}}}],["cluster_tagmodule_import",{"_index":438,"title":{},"body":{"modules/TagModule.html":{}}}],["cluster_usermodul",{"_index":521,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_export",{"_index":522,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":235,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["column('simpl",{"_index":237,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["column()@isemail",{"_index":503,"title":{},"body":{"classes/UserEntity.html":{}}}],["column({default",{"_index":220,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/UserEntity.html":{}}}],["column({typ",{"_index":226,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["comment",{"_index":93,"title":{"classes/Comment.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["comment'})@apiresponse({statu",{"_index":92,"title":{},"body":{"controllers/ArticleController.html":{}}}],["comment.articl",{"_index":260,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["comment.ent",{"_index":252,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{}}}],["comment.t",{"_index":353,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["comment.ts:2",{"_index":354,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["commentdata",{"_index":90,"title":{},"body":{"controllers/ArticleController.html":{}}}],["commentsro",{"_index":146,"title":{"interfaces/CommentsRO.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["compodoc",{"_index":593,"title":{},"body":{"index.html":{},"license.html":{}}}],["compon",{"_index":53,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["condit",{"_index":639,"title":{},"body":{"license.html":{}}}],["config",{"_index":313,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{}}}],["configur",{"_index":266,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["configure(consum",{"_index":267,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["connect",{"_index":48,"title":{},"body":{"modules/ApplicationModule.html":{},"license.html":{}}}],["const",{"_index":184,"title":{},"body":{"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/UserController.html":{},"pipes/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constraint[0",{"_index":564,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["constraint[1",{"_index":565,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["constructor",{"_index":296,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{}}}],["constructor(priv",{"_index":54,"title":{},"body":{"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["constructor(userservic",{"_index":297,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["consum",{"_index":270,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["contract",{"_index":661,"title":{},"body":{"license.html":{}}}],["control",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["controller('api",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('articl",{"_index":155,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('profil",{"_index":399,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('tag",{"_index":430,"title":{},"body":{"controllers/TagController.html":{}}}],["copi",{"_index":619,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":610,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":567,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":60,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"controllers/UserController.html":{}}}],["create(@body('us",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["create(@user('id",{"_index":166,"title":{},"body":{"controllers/ArticleController.html":{}}}],["create(userdata",{"_index":453,"title":{},"body":{"controllers/UserController.html":{}}}],["create(userid",{"_index":71,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createarticledto",{"_index":74,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createcom",{"_index":61,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment(@param('slug",{"_index":179,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcomment(slug",{"_index":89,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createcommentdto",{"_index":91,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/ArticleController.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["created.'})@apiresponse({statu",{"_index":80,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createdat",{"_index":202,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["createhmac('sha256",{"_index":517,"title":{},"body":{"classes/UserEntity.html":{}}}],["createrouteparamdecorator((data",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":355,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["crypto",{"_index":373,"title":{},"body":{"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["current_timestamp",{"_index":254,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["customemail",{"_index":374,"title":{},"body":{"classes/FollowsEntity.html":{},"classes/TagEntity.html":{}}}],["damag",{"_index":657,"title":{},"body":{"license.html":{}}}],["data",{"_index":457,"title":{},"body":{"controllers/UserController.html":{},"interfaces/UserData.html":{},"pipes/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":207,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["deal",{"_index":622,"title":{},"body":{"license.html":{}}}],["declar",{"_index":30,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decod",{"_index":322,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["decoded.id",{"_index":341,"title":{},"body":{"classes/BaseController.html":{}}}],["decoded.us",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded[data",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decor",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{}}}],["default",{"_index":228,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{}}}],["delet",{"_index":62,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete(':slug",{"_index":175,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':slug/comments/:id",{"_index":182,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':slug/favorit",{"_index":191,"title":{},"body":{"controllers/ArticleController.html":{}}}],["delete(':username/follow",{"_index":392,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('users/:slug",{"_index":458,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param",{"_index":176,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/UserController.html":{}}}],["delete(param",{"_index":97,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/UserController.html":{}}}],["deletecom",{"_index":63,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletecomment(@param",{"_index":183,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deletecomment(param",{"_index":102,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deleted.'})@apiresponse({statu",{"_index":98,"title":{},"body":{"controllers/ArticleController.html":{}}}],["demo",{"_index":594,"title":{},"body":{"index.html":{}}}],["demonstr",{"_index":603,"title":{},"body":{"index.html":{}}}],["depend",{"_index":28,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["descript",{"_index":78,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{}}}],["digest('hex",{"_index":518,"title":{},"body":{"classes/UserEntity.html":{}}}],["distribut",{"_index":632,"title":{},"body":{"license.html":{}}}],["document",{"_index":568,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dto",{"_index":142,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/UserController.html":{}}}],["eager",{"_index":223,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["el.properti",{"_index":561,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["email",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{}}}],["embed",{"_index":606,"title":{},"body":{"index.html":{}}}],["entiti",{"_index":245,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["entity('articl",{"_index":253,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["entity('follow",{"_index":376,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["entity('tag",{"_index":436,"title":{},"body":{"classes/TagEntity.html":{}}}],["entity('us",{"_index":515,"title":{},"body":{"classes/UserEntity.html":{}}}],["error",{"_index":491,"title":{},"body":{"controllers/UserController.html":{},"pipes/ValidationPipe.html":{}}}],["errors.foreach(el",{"_index":559,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["errors.length",{"_index":553,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["etc",{"_index":607,"title":{},"body":{"index.html":{}}}],["event",{"_index":653,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":601,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{},"overview.html":{}}}],["express",{"_index":139,"title":{},"body":{"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"license.html":{}}}],["extractjwt",{"_index":305,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["fail",{"_index":556,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["favorit",{"_index":64,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/UserEntity.html":{}}}],["favorite(@user('id",{"_index":188,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favorite(userid",{"_index":105,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favoritecount",{"_index":214,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["favorited.'})@apiresponse({statu",{"_index":106,"title":{},"body":{"controllers/ArticleController.html":{}}}],["favoritescount",{"_index":203,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["featur",{"_index":604,"title":{},"body":{"index.html":{}}}],["feed",{"_index":194,"title":{},"body":{"controllers/ArticleController.html":{}}}],["feed'})@apiresponse({statu",{"_index":123,"title":{},"body":{"controllers/ArticleController.html":{}}}],["feed.'})@apiresponse({statu",{"_index":124,"title":{},"body":{"controllers/ArticleController.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{},"license.html":{}}}],["find",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["findal",{"_index":65,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/TagController.html":{}}}],["findall(@queri",{"_index":158,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findall(queri",{"_index":109,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findcom",{"_index":66,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findcomments(@param('slug",{"_index":163,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findcomments(slug",{"_index":116,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findm",{"_index":451,"title":{},"body":{"controllers/UserController.html":{}}}],["findme(@user('email",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["findme(email",{"_index":460,"title":{},"body":{"controllers/UserController.html":{}}}],["findon",{"_index":67,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findone(@param('slug",{"_index":161,"title":{},"body":{"controllers/ArticleController.html":{}}}],["findone(slug",{"_index":119,"title":{},"body":{"controllers/ArticleController.html":{}}}],["fit",{"_index":649,"title":{},"body":{"license.html":{}}}],["follow",{"_index":382,"title":{},"body":{"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"license.html":{}}}],["follow(@user('email",{"_index":403,"title":{},"body":{"controllers/ProfileController.html":{}}}],["follow(email",{"_index":385,"title":{},"body":{"controllers/ProfileController.html":{}}}],["followerid",{"_index":367,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["followingid",{"_index":368,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["follows.ent",{"_index":416,"title":{},"body":{"modules/ProfileModule.html":{}}}],["followsent",{"_index":274,"title":{"classes/FollowsEntity.html":{}},"body":{"modules/ArticleModule.html":{},"classes/FollowsEntity.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["forbidden",{"_index":165,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@delete(':slug",{"_index":99,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@delete(':slug/comments/:id",{"_index":103,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@delete(':slug/favorit",{"_index":129,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@get('fe",{"_index":125,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@post",{"_index":82,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@post(':slug/com",{"_index":94,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@post(':slug/favorit",{"_index":107,"title":{},"body":{"controllers/ArticleController.html":{}}}],["forbidden.'})@put(':slug",{"_index":133,"title":{},"body":{"controllers/ArticleController.html":{}}}],["fork",{"_index":598,"title":{},"body":{"index.html":{}}}],["forrout",{"_index":281,"title":{},"body":{"modules/ArticleModule.html":{}}}],["forroutes({path",{"_index":418,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":327,"title":{},"body":{"classes/AuthMiddleware.html":{},"controllers/UserController.html":{}}}],["free",{"_index":616,"title":{},"body":{"license.html":{}}}],["function",{"_index":581,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":637,"title":{},"body":{"license.html":{}}}],["get",{"_index":172,"title":{"index.html":{},"license.html":{}},"body":{"controllers/ArticleController.html":{}}}],["get(':slug",{"_index":120,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get(':slug/com",{"_index":117,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get(':usernam",{"_index":389,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('fe",{"_index":195,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('us",{"_index":461,"title":{},"body":{"controllers/UserController.html":{}}}],["getfe",{"_index":68,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getfeed(@user('id",{"_index":196,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getfeed(userid",{"_index":122,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getprofil",{"_index":383,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@user('id",{"_index":400,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(userid",{"_index":388,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getuseridfromtoken",{"_index":335,"title":{},"body":{"classes/BaseController.html":{}}}],["getuseridfromtoken(author",{"_index":337,"title":{},"body":{"classes/BaseController.html":{}}}],["grant",{"_index":615,"title":{},"body":{"license.html":{}}}],["hashpassword",{"_index":499,"title":{},"body":{"classes/UserEntity.html":{}}}],["hello",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["herebi",{"_index":614,"title":{},"body":{"license.html":{}}}],["holder",{"_index":654,"title":{},"body":{"license.html":{}}}],["httpexcept",{"_index":301,"title":{},"body":{"classes/AuthMiddleware.html":{},"controllers/UserController.html":{},"pipes/ValidationPipe.html":{}}}],["httpexception('not",{"_index":331,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["httpexception('us",{"_index":326,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["httpexception({messag",{"_index":554,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["https://github.com/lujakob/nestj",{"_index":599,"title":{},"body":{"index.html":{}}}],["httpstatu",{"_index":304,"title":{},"body":{"classes/AuthMiddleware.html":{},"pipes/ValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":558,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["httpstatus.unauthor",{"_index":328,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["id",{"_index":185,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{}}}],["identifi",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":410,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"index.html":{}}}],["implement",{"_index":279,"title":{},"body":{"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{}}}],["impli",{"_index":647,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{}}}],["includ",{"_index":625,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{}}}],["input",{"_index":555,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["interfac",{"_index":198,"title":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{}},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["isemail",{"_index":372,"title":{},"body":{"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["isnotempti",{"_index":361,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["joincolumn",{"_index":249,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["jointabl",{"_index":512,"title":{},"body":{"classes/UserEntity.html":{}}}],["jsonwebtoken",{"_index":311,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{}}}],["jwt",{"_index":308,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt.verify(token",{"_index":323,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{}}}],["jwt.verify(token[1",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":646,"title":{},"body":{"license.html":{}}}],["legend",{"_index":29,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["liabil",{"_index":658,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":655,"title":{},"body":{"license.html":{}}}],["licens",{"_index":608,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":626,"title":{},"body":{"license.html":{}}}],["link",{"_index":501,"title":{},"body":{"classes/UserEntity.html":{}}}],["live",{"_index":596,"title":{},"body":{"index.html":{}}}],["login",{"_index":452,"title":{},"body":{"controllers/UserController.html":{}}}],["login(@body('us",{"_index":488,"title":{},"body":{"controllers/UserController.html":{}}}],["login(loginuserdto",{"_index":464,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuserdto",{"_index":377,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["manytomani",{"_index":513,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytomany(typ",{"_index":519,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytomany(undefined)@joint",{"_index":505,"title":{},"body":{"classes/UserEntity.html":{}}}],["manytoon",{"_index":247,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{}}}],["manytoone(typ",{"_index":257,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{}}}],["manytoone(undefin",{"_index":217,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{}}}],["match",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":648,"title":{},"body":{"license.html":{}}}],["merg",{"_index":630,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":529,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["metatyp",{"_index":537,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["method",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{},"index.html":{}}}],["middlewar",{"_index":303,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["middlewaresconsum",{"_index":268,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["miscellan",{"_index":590,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":609,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":629,"title":{},"body":{"license.html":{}}}],["modul",{"_index":26,"title":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{}}}],["nest",{"_index":595,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{}}}],["nestjs/common/exceptions/http.except",{"_index":546,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["nestjs/cor",{"_index":302,"title":{},"body":{"classes/AuthMiddleware.html":{},"controllers/UserController.html":{}}}],["nestjs/swagg",{"_index":153,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["nestjs/typeorm",{"_index":47,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["nestmiddlewar",{"_index":294,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["nestmodul",{"_index":271,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["new",{"_index":256,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/AuthMiddleware.html":{},"controllers/UserController.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":317,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["nextfunct",{"_index":310,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["noninfring",{"_index":652,"title":{},"body":{"license.html":{}}}],["notic",{"_index":641,"title":{},"body":{"license.html":{}}}],["null",{"_index":339,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":72,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/FollowsEntity.html":{},"controllers/ProfileController.html":{},"classes/TagEntity.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"pipes/ValidationPipe.html":{}}}],["object",{"_index":550,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["object.entries(el.constraints).foreach(constraint",{"_index":562,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["obtain",{"_index":618,"title":{},"body":{"license.html":{}}}],["onetomani",{"_index":248,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(typ",{"_index":259,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/UserEntity.html":{}}}],["onetomany(undefin",{"_index":222,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/UserEntity.html":{}}}],["onetoon",{"_index":246,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["option",{"_index":87,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["otherwis",{"_index":663,"title":{},"body":{"license.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":669,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["param",{"_index":101,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["param('slug",{"_index":189,"title":{},"body":{"controllers/ArticleController.html":{}}}],["param('usernam",{"_index":401,"title":{},"body":{"controllers/ProfileController.html":{}}}],["paramet",{"_index":84,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{}}}],["particular",{"_index":650,"title":{},"body":{"license.html":{}}}],["passport",{"_index":307,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["password",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UserEntity.html":{}}}],["path",{"_index":282,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["permiss",{"_index":613,"title":{},"body":{"license.html":{}}}],["permit",{"_index":636,"title":{},"body":{"license.html":{}}}],["person",{"_index":497,"title":{},"body":{"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"license.html":{}}}],["pipe",{"_index":527,"title":{"pipes/ValidationPipe.html":{}},"body":{"pipes/ValidationPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":543,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["plaintoclass",{"_index":545,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["plaintoclass(metatyp",{"_index":551,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["portion",{"_index":644,"title":{},"body":{"license.html":{}}}],["post",{"_index":135,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post(':slug/com",{"_index":178,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post(':slug/favorit",{"_index":187,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post(':username/follow",{"_index":386,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('us",{"_index":483,"title":{},"body":{"controllers/UserController.html":{}}}],["post('users/login",{"_index":487,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{}}}],["primarygeneratedcolumn",{"_index":233,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["privat",{"_index":530,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["profil",{"_index":381,"title":{},"body":{"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{}}}],["profile.control",{"_index":415,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.interfac",{"_index":397,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.servic",{"_index":395,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/follows.ent",{"_index":275,"title":{},"body":{"modules/ArticleModule.html":{}}}],["profile/profile.modul",{"_index":50,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["profilecontrol",{"_index":379,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profiledata",{"_index":407,"title":{"interfaces/ProfileData.html":{}},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"coverage.html":{}}}],["profilemodul",{"_index":36,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilero",{"_index":396,"title":{"interfaces/ProfileRO.html":{}},"body":{"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"coverage.html":{}}}],["profiles/:username/follow",{"_index":419,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservic",{"_index":394,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["project",{"_index":597,"title":{},"body":{"index.html":{}}}],["promis",{"_index":115,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"controllers/UserController.html":{}}}],["prop",{"_index":560,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["properti",{"_index":200,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"index.html":{}}}],["protect",{"_index":334,"title":{},"body":{"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["provid",{"_index":32,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":265,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["publish",{"_index":631,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":651,"title":{},"body":{"license.html":{}}}],["put",{"_index":137,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/UserController.html":{}}}],["put(':slug",{"_index":169,"title":{},"body":{"controllers/ArticleController.html":{}}}],["put('us",{"_index":468,"title":{},"body":{"controllers/UserController.html":{}}}],["queri",{"_index":114,"title":{},"body":{"controllers/ArticleController.html":{}}}],["re",{"_index":316,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["readonli",{"_index":55,"title":{},"body":{"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"controllers/TagController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["realworld",{"_index":600,"title":{},"body":{"index.html":{}}}],["req",{"_index":315,"title":{},"body":{"classes/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.headers.author",{"_index":318,"title":{},"body":{"classes/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.us",{"_index":329,"title":{},"body":{"classes/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.user[data",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":138,"title":{},"body":{"controllers/ArticleController.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["requestmethod",{"_index":272,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.al",{"_index":420,"title":{},"body":{"modules/ProfileModule.html":{}}}],["requestmethod.delet",{"_index":288,"title":{},"body":{"modules/ArticleModule.html":{}}}],["requestmethod.get",{"_index":284,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.post",{"_index":286,"title":{},"body":{"modules/ArticleModule.html":{}}}],["requestmethod.put",{"_index":289,"title":{},"body":{"modules/ArticleModule.html":{},"modules/UserModule.html":{}}}],["require('jsonwebtoken",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('slug",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolv",{"_index":295,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["respons",{"_index":309,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["restrict",{"_index":624,"title":{},"body":{"license.html":{}}}],["result",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result[prop",{"_index":563,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["return",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"pipes/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":627,"title":{},"body":{"license.html":{}}}],["root",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["rout",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":312,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":635,"title":{},"body":{"license.html":{}}}],["set",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":642,"title":{},"body":{"license.html":{}}}],["shared/pipes/validation.pip",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["slug",{"_index":96,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":620,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/ApplicationModule.html":{},"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{}}}],["src/.../article.service.t",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.t",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.t",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.t",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.t",{"_index":5,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:6",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.t",{"_index":42,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["src/article/article.controller.t",{"_index":57,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:102",{"_index":126,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:26",{"_index":113,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:31",{"_index":121,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:36",{"_index":118,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:44",{"_index":83,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:52",{"_index":134,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:61",{"_index":100,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:69",{"_index":95,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:77",{"_index":104,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:86",{"_index":108,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:94",{"_index":130,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.entity.t",{"_index":213,"title":{},"body":{"classes/ArticleEntity.html":{},"coverage.html":{}}}],["src/article/article.entity.ts:12",{"_index":236,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:15",{"_index":240,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:18",{"_index":230,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:21",{"_index":221,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:24",{"_index":229,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:27",{"_index":241,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:30",{"_index":243,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:35",{"_index":239,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:38",{"_index":219,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:42",{"_index":225,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:45",{"_index":232,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.entity.ts:9",{"_index":234,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["src/article/article.interface.t",{"_index":199,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"coverage.html":{}}}],["src/article/article.module.t",{"_index":264,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.module.ts:20",{"_index":269,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.service.t",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/article/comment.entity.t",{"_index":342,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/article/comment.entity.ts:11",{"_index":344,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/comment.entity.ts:14",{"_index":343,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/comment.entity.ts:8",{"_index":345,"title":{},"body":{"classes/Comment.html":{}}}],["src/article/dto/cr",{"_index":347,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/main.t",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/profile/follows.entity.t",{"_index":366,"title":{},"body":{"classes/FollowsEntity.html":{},"coverage.html":{}}}],["src/profile/follows.entity.ts:10",{"_index":371,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/follows.entity.ts:13",{"_index":369,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/follows.entity.ts:16",{"_index":370,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["src/profile/profile.controller.t",{"_index":380,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:20",{"_index":390,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:25",{"_index":387,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:30",{"_index":393,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.interface.t",{"_index":408,"title":{},"body":{"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"coverage.html":{}}}],["src/profile/profile.module.t",{"_index":413,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.module.ts:19",{"_index":414,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/shared/base.controller.t",{"_index":333,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/shared/base.controller.ts:4",{"_index":336,"title":{},"body":{"classes/BaseController.html":{}}}],["src/shared/base.controller.ts:8",{"_index":338,"title":{},"body":{"classes/BaseController.html":{}}}],["src/shared/pipes/validation.pipe.t",{"_index":528,"title":{},"body":{"pipes/ValidationPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts:26",{"_index":533,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:37",{"_index":536,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:8",{"_index":541,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["src/tag/tag.controller.t",{"_index":422,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tag/tag.controller.ts:19",{"_index":424,"title":{},"body":{"controllers/TagController.html":{}}}],["src/tag/tag.entity.t",{"_index":432,"title":{},"body":{"classes/TagEntity.html":{},"coverage.html":{}}}],["src/tag/tag.entity.ts:10",{"_index":433,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.entity.ts:13",{"_index":434,"title":{},"body":{"classes/TagEntity.html":{}}}],["src/tag/tag.module.t",{"_index":439,"title":{},"body":{"modules/TagModule.html":{}}}],["src/tag/tag.module.ts:17",{"_index":440,"title":{},"body":{"modules/TagModule.html":{}}}],["src/user/auth.middleware.t",{"_index":293,"title":{},"body":{"classes/AuthMiddleware.html":{},"coverage.html":{}}}],["src/user/auth.middleware.ts:10",{"_index":299,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["src/user/auth.middleware.ts:13",{"_index":300,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["src/user/dto/cr",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login",{"_index":378,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/upd",{"_index":444,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.t",{"_index":450,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:36",{"_index":462,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:46",{"_index":469,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:59",{"_index":456,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:68",{"_index":459,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:74",{"_index":466,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.decorator.t",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.entity.t",{"_index":498,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:20",{"_index":507,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:26",{"_index":510,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:30",{"_index":504,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:33",{"_index":502,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:36",{"_index":508,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:42",{"_index":509,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:45",{"_index":511,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:53",{"_index":506,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.entity.ts:59",{"_index":500,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/user.interface.t",{"_index":494,"title":{},"body":{"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["src/user/user.module.t",{"_index":523,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:17",{"_index":524,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.t",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":592,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":157,"title":{},"body":{"controllers/ArticleController.html":{}}}],["still",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategi",{"_index":306,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"classes/TagEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{}}}],["string).split",{"_index":319,"title":{},"body":{"classes/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":638,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":633,"title":{},"body":{"license.html":{}}}],["submit",{"_index":548,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["substanti",{"_index":643,"title":{},"body":{"license.html":{}}}],["successfulli",{"_index":79,"title":{},"body":{"controllers/ArticleController.html":{}}}],["support",{"_index":666,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":667,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":423,"title":{},"body":{"controllers/TagController.html":{},"classes/TagEntity.html":{}}}],["tag.control",{"_index":441,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.ent",{"_index":426,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tag.servic",{"_index":428,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tag/tag.modul",{"_index":51,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["tagcontrol",{"_index":421,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tagent",{"_index":425,"title":{"classes/TagEntity.html":{}},"body":{"controllers/TagController.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"coverage.html":{}}}],["taglist",{"_index":204,"title":{},"body":{"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{}}}],["tagmodul",{"_index":37,"title":{"modules/TagModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["tagservic",{"_index":427,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["this.articleservice.addcomment(slug",{"_index":181,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.create(userid",{"_index":168,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.delete(params.slug",{"_index":177,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.deletecomment(slug",{"_index":186,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.favorite(userid",{"_index":190,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findall(queri",{"_index":160,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findcomments(slug",{"_index":164,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findfeed(userid",{"_index":197,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findone({slug",{"_index":162,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.unfavorite(userid",{"_index":193,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.update(params.slug",{"_index":174,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.builderror(error",{"_index":557,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["this.password",{"_index":516,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.profileservice.findprofile(userid",{"_index":402,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.follow(email",{"_index":404,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.unfollow(userid",{"_index":406,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.tagservice.findal",{"_index":431,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tovalidate(metatyp",{"_index":549,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["this.upd",{"_index":255,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["this.userservice.create(userdata",{"_index":485,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(params.slug",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyemail(email",{"_index":479,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(decoded.id",{"_index":324,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["this.userservice.findone(loginuserdto",{"_index":490,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generatejwt(_us",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":325,"title":{},"body":{"classes/AuthMiddleware.html":{},"controllers/UserController.html":{},"pipes/ValidationPipe.html":{}}}],["timestamp",{"_index":227,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["titl",{"_index":156,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{}}}],["todo",{"_index":171,"title":{},"body":{"controllers/ArticleController.html":{}}}],["token",{"_index":320,"title":{},"body":{"classes/AuthMiddleware.html":{},"classes/BaseController.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"miscellaneous/variables.html":{}}}],["token[1",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":662,"title":{},"body":{"license.html":{}}}],["tovalid",{"_index":534,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["tovalidate(metatyp",{"_index":535,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["transform",{"_index":538,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["transform(valu",{"_index":539,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["true",{"_index":261,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["type",{"_index":86,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/ArticleData.html":{},"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"classes/AuthMiddleware.html":{},"classes/Comment.html":{},"interfaces/CommentsRO.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileRO.html":{},"classes/TagEntity.html":{},"modules/TagModule.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{}}}],["typeorm",{"_index":49,"title":{},"body":{"modules/ApplicationModule.html":{},"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/FollowsEntity.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{}}}],["typeormmodul",{"_index":46,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([articleent",{"_index":278,"title":{},"body":{"modules/ArticleModule.html":{}}}],["typeormmodule.forfeature([tagent",{"_index":442,"title":{},"body":{"modules/TagModule.html":{}}}],["typeormmodule.forfeature([userent",{"_index":417,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":52,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["types.find((typ",{"_index":566,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["undefin",{"_index":218,"title":{},"body":{"classes/ArticleEntity.html":{},"classes/Comment.html":{},"classes/UserEntity.html":{}}}],["undefined})@joincolumn",{"_index":224,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["unfavorit",{"_index":69,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorite(@user('id",{"_index":192,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorite(userid",{"_index":127,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfavorited.'})@apiresponse({statu",{"_index":128,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unfollow",{"_index":384,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollow(@user('id",{"_index":405,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unfollow(userid",{"_index":391,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updat",{"_index":70,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"controllers/UserController.html":{}}}],["update(@param",{"_index":170,"title":{},"body":{"controllers/ArticleController.html":{}}}],["update(param",{"_index":131,"title":{},"body":{"controllers/ArticleController.html":{}}}],["update(userid",{"_index":467,"title":{},"body":{"controllers/UserController.html":{}}}],["updated.'})@apiresponse({statu",{"_index":132,"title":{},"body":{"controllers/ArticleController.html":{}}}],["updatedat",{"_index":205,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["updatetimestamp",{"_index":215,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["updateuserdto",{"_index":443,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["us",{"_index":628,"title":{},"body":{"license.html":{}}}],["usepip",{"_index":470,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes(new",{"_index":454,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":147,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleEntity.html":{},"classes/AuthMiddleware.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user('id",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["user.articl",{"_index":258,"title":{},"body":{"classes/ArticleEntity.html":{}}}],["user.control",{"_index":525,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decor",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.t",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":363,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:2",{"_index":448,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:3",{"_index":446,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:4",{"_index":445,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:5",{"_index":447,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":364,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.dto.ts:9",{"_index":362,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.ent",{"_index":471,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.interfac",{"_index":473,"title":{},"body":{"controllers/UserController.html":{}}}],["user.servic",{"_index":314,"title":{},"body":{"classes/AuthMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.us",{"_index":330,"title":{},"body":{"classes/AuthMiddleware.html":{}}}],["user/auth.middlewar",{"_index":277,"title":{},"body":{"modules/ArticleModule.html":{},"modules/ProfileModule.html":{}}}],["user/customemail",{"_index":375,"title":{},"body":{"classes/FollowsEntity.html":{}}}],["user/user.decor",{"_index":148,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{}}}],["user/user.ent",{"_index":251,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{}}}],["user/user.interfac",{"_index":209,"title":{},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{}}}],["user/user.modul",{"_index":45,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{}}}],["usercontrol",{"_index":449,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userdata",{"_index":206,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ArticleData.html":{},"interfaces/ArticleRO.html":{},"interfaces/ArticlesRO.html":{},"interfaces/CommentsRO.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["userent",{"_index":216,"title":{"classes/UserEntity.html":{}},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":88,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["usermodul",{"_index":38,"title":{"modules/UserModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usernam",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ProfileController.html":{},"interfaces/ProfileData.html":{},"interfaces/ProfileRO.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"interfaces/UserData.html":{},"classes/UserEntity.html":{},"interfaces/UserRO.html":{}}}],["userro",{"_index":472,"title":{"interfaces/UserRO.html":{}},"body":{"controllers/UserController.html":{},"interfaces/UserData.html":{},"interfaces/UserRO.html":{},"coverage.html":{}}}],["userservic",{"_index":298,"title":{},"body":{"classes/AuthMiddleware.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["valid",{"_index":365,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FollowsEntity.html":{},"classes/LoginUserDto.html":{},"classes/TagEntity.html":{},"classes/UserEntity.html":{},"pipes/ValidationPipe.html":{}}}],["validate(object",{"_index":552,"title":{},"body":{"pipes/ValidationPipe.html":{}}}],["validationpip",{"_index":475,"title":{"pipes/ValidationPipe.html":{}},"body":{"controllers/UserController.html":{},"pipes/ValidationPipe.html":{},"coverage.html":{}}}],["validationpipe())@post('us",{"_index":455,"title":{},"body":{"controllers/UserController.html":{}}}],["validationpipe())@post('users/login",{"_index":465,"title":{},"body":{"controllers/UserController.html":{}}}],["valu",{"_index":542,"title":{},"body":{"pipes/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":576,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":244,"title":{},"body":{"classes/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/AuthMiddleware.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{}}}],["want",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranti",{"_index":645,"title":{},"body":{"license.html":{}}}],["whether",{"_index":659,"title":{},"body":{"license.html":{}}}],["without",{"_index":623,"title":{},"body":{"license.html":{}}}],["world",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ArticleModule.html":{},"modules/ProfileModule.html":{},"modules/TagModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            root\n                            \n                            \n                        \n                    \n                \n                \n                    \nroot()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Get()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/app.controller.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n    \n\n\n    \n        import { Get, Controller } from '@nestjs/common';\n\n@Controller('api')\nexport class AppController {\n  @Get()\n  root(): string {\n    return 'Hello World!';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationModule.html":{"url":"modules/ApplicationModule.html","title":"module - ApplicationModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationModule\n\n\n\ncluster_ApplicationModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nApplicationModule\n\nApplicationModule\n\nApplicationModule -->\n\nArticleModule->ApplicationModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nApplicationModule -->\n\nProfileModule->ApplicationModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nApplicationModule -->\n\nTagModule->ApplicationModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApplicationModule -->\n\nUserModule->ApplicationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            TagModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { ArticleModule } from './article/article.module';\nimport { UserModule } from './user/user.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { ProfileModule } from './profile/profile.module';\nimport { TagModule } from './tag/tag.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(),\n    ArticleModule,\n    UserModule,\n    ProfileModule,\n    TagModule\n  ],\n  controllers: [\n    AppController\n  ],\n  components: []\n})\nexport class ApplicationModule {\n  constructor(private readonly connection: Connection) {}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createComment\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                favorite\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findComments\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getFeed\n                            \n                            \n                                    Async\n                                unFavorite\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        create(userId: number, articleData: CreateArticleDto)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Create article'})@ApiResponse({status: 201, description: 'The article has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        articleData\n                                                        \n                                                                    CreateArticleDto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            createComment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createComment(slug, commentData: CreateCommentDto)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Create comment'})@ApiResponse({status: 201, description: 'The comment has been successfully created.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post(':slug/comments')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        slug\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        commentData\n                                                        \n                                                                    CreateCommentDto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete(params)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Delete article'})@ApiResponse({status: 201, description: 'The article has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            deleteComment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteComment(params)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Delete comment'})@ApiResponse({status: 201, description: 'The article has been successfully deleted.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug/comments/:id')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            favorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        favorite(userId: number, slug)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Favorite article'})@ApiResponse({status: 201, description: 'The article has been successfully favorited.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Post(':slug/favorite')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        slug\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            findAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findAll(query)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Get all articles'})@ApiResponse({status: 200, description: 'Return all articles.'})@Get()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            findComments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findComments(slug)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Get(':slug/comments')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        slug\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            findOne\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findOne(slug)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Get(':slug')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        slug\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getFeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFeed(userId: number, query)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Get article feed'})@ApiResponse({status: 200, description: 'Return article feed.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Get('feed')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            unFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unFavorite(userId: number, slug)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Unfavorite article'})@ApiResponse({status: 201, description: 'The article has been successfully unfavorited.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Delete(':slug/favorite')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        slug\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(params, articleData: CreateArticleDto)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiOperation({title: 'Update article'})@ApiResponse({status: 201, description: 'The article has been successfully updated.'})@ApiResponse({status: 403, description: 'Forbidden.'})@Put(':slug')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.controller.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        articleData\n                                                        \n                                                                    CreateArticleDto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n    \n\n\n    \n        import {Get, Post, Body, Put, Delete, Query, Param, Controller} from '@nestjs/common';\nimport { Request } from 'express';\nimport { ArticleService } from './article.service';\nimport { CreateArticleDto, CreateCommentDto } from './dto';\nimport { ArticlesRO, ArticleRO } from './article.interface';\nimport { CommentsRO } from './article.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiUseTags,\n  ApiBearerAuth,\n  ApiResponse,\n  ApiOperation,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiUseTags('articles')\n@Controller('articles')\nexport class ArticleController {\n\n  constructor(private readonly articleService: ArticleService) {}\n\n  @ApiOperation({ title: 'Get all articles' })\n  @ApiResponse({ status: 200, description: 'Return all articles.'})\n  @Get()\n  async findAll(@Query() query): Promise {\n    return await this.articleService.findAll(query);\n  }\n\n  @Get(':slug')\n  async findOne(@Param('slug') slug): Promise {\n    return await this.articleService.findOne({slug});\n  }\n\n  @Get(':slug/comments')\n  async findComments(@Param('slug') slug): Promise {\n    return await this.articleService.findComments(slug);\n  }\n\n  @ApiOperation({ title: 'Create article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post()\n  async create(@User('id') userId: number, @Body('article') articleData: CreateArticleDto) {\n    return this.articleService.create(userId, articleData);\n  }\n\n  @ApiOperation({ title: 'Update article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully updated.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Put(':slug')\n  async update(@Param() params, @Body('article') articleData: CreateArticleDto) {\n    // Todo: update slug also when title gets changed\n    return this.articleService.update(params.slug, articleData);\n  }\n\n  @ApiOperation({ title: 'Delete article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug')\n  async delete(@Param() params) {\n    return this.articleService.delete(params.slug);\n  }\n\n  @ApiOperation({ title: 'Create comment' })\n  @ApiResponse({ status: 201, description: 'The comment has been successfully created.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post(':slug/comments')\n  async createComment(@Param('slug') slug, @Body('comment') commentData: CreateCommentDto) {\n    return await this.articleService.addComment(slug, commentData);\n  }\n\n  @ApiOperation({ title: 'Delete comment' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully deleted.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug/comments/:id')\n  async deleteComment(@Param() params) {\n    const {slug, id} = params;\n    return await this.articleService.deleteComment(slug, id);\n  }\n\n  @ApiOperation({ title: 'Favorite article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully favorited.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Post(':slug/favorite')\n  async favorite(@User('id') userId: number, @Param('slug') slug) {\n    return await this.articleService.favorite(userId, slug);\n  }\n\n  @ApiOperation({ title: 'Unfavorite article' })\n  @ApiResponse({ status: 201, description: 'The article has been successfully unfavorited.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Delete(':slug/favorite')\n  async unFavorite(@User('id') userId: number, @Param('slug') slug) {\n    return await this.articleService.unFavorite(userId, slug);\n  }\n\n  @ApiOperation({ title: 'Get article feed' })\n  @ApiResponse({ status: 200, description: 'Return article feed.'})\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  @Get('feed')\n  async getFeed(@User('id') userId: number, @Query() query): Promise {\n    return await this.articleService.findFeed(userId, query);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleData.html":{"url":"interfaces/ArticleData.html","title":"interface - ArticleData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticleData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        author\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        favorited\n                                \n                                \n                                            Optional\n                                        favoritesCount\n                                \n                                \n                                        slug\n                                \n                                \n                                            Optional\n                                        tagList\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:     UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favorited\n                                    \n                                \n                                \n                                    \n                                        favorited:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favoritesCount\n                                    \n                                \n                                \n                                    \n                                        favoritesCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagList\n                                    \n                                \n                                \n                                    \n                                        tagList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleEntity.html":{"url":"classes/ArticleEntity.html","title":"class - ArticleEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                comments\n                            \n                            \n                                created\n                            \n                            \n                                description\n                            \n                            \n                                favoriteCount\n                            \n                            \n                                id\n                            \n                            \n                                slug\n                            \n                            \n                                tagList\n                            \n                            \n                                title\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     UserEntity\n\n                    \n                \n                    \n                        \n                            Type :     UserEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comments:     Comment[]\n\n                    \n                \n                    \n                        \n                            Type :     Comment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {eager: undefined})@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        created:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favoriteCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        favoriteCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slug:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tagList:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('simple-array')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTimestamp()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BeforeUpdate()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/article/article.entity.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, OneToMany, JoinColumn, AfterUpdate, BeforeUpdate } from 'typeorm';\nimport { UserEntity } from '../user/user.entity';\nimport { Comment } from './comment.entity';\n\n@Entity('article')\nexport class ArticleEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  slug: string;\n\n  @Column()\n  title: string;\n\n  @Column({default: ''})\n  description: string;\n\n  @Column({default: ''})\n  body: string;\n\n  @Column({ type: 'timestamp', default: () => \"CURRENT_TIMESTAMP\"})\n  created: Date;\n\n  @Column({ type: 'timestamp', default: () => \"CURRENT_TIMESTAMP\"})\n  updated: Date;\n\n  @BeforeUpdate()\n  updateTimestamp() {\n    this.updated = new Date;\n  }\n\n  @Column('simple-array')\n  tagList: string[];\n\n  @ManyToOne(type => UserEntity, user => user.articles)\n  author: UserEntity;\n\n  @OneToMany(type => Comment, comment => comment.article, {eager: true})\n  @JoinColumn()\n  comments: Comment[];\n\n  @Column({default: 0})\n  favoriteCount: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nUserModule->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(consumer: MiddlewaresConsumer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/article/article.module.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consumer\n                                                        \n                                                                    MiddlewaresConsumer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MiddlewaresConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { ArticleController } from './article.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticleEntity } from './article.entity';\nimport { Comment } from './comment.entity';\nimport { UserEntity } from '../user/user.entity';\nimport { FollowsEntity } from '../profile/follows.entity';\nimport { ArticleService } from './article.service';\nimport { AuthMiddleware } from '../user/auth.middleware';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ArticleEntity, Comment, UserEntity, FollowsEntity]), UserModule],\n  components: [ArticleService],\n  controllers: [\n    ArticleController\n  ]\n})\nexport class ArticleModule implements NestModule {\n  public configure(consumer: MiddlewaresConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        {path: 'aticles/feed', method: RequestMethod.GET},\n        {path: 'aticles', method: RequestMethod.POST},\n        {path: 'aticles/:slug', method: RequestMethod.DELETE},\n        {path: 'aticles/:slug', method: RequestMethod.PUT},\n        {path: 'articles/:slug/comments', method: RequestMethod.POST},\n        {path: 'articles/:slug/comments/:id', method: RequestMethod.DELETE},\n        {path: 'articles/:slug/favorite', method: RequestMethod.POST},\n        {path: 'articles/:slug/favorite', method: RequestMethod.DELETE});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticleRO.html":{"url":"interfaces/ArticleRO.html","title":"interface - ArticleRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticleRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        article\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                    \n                                \n                                \n                                    \n                                        article:     ArticleEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ArticleEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArticlesRO.html":{"url":"interfaces/ArticlesRO.html","title":"interface - ArticlesRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArticlesRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        articles\n                                \n                                \n                                        articlesCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articles\n                                    \n                                \n                                \n                                    \n                                        articles:     ArticleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ArticleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        articlesCount\n                                    \n                                \n                                \n                                    \n                                        articlesCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthMiddleware.html":{"url":"classes/AuthMiddleware.html","title":"class - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/auth.middleware.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NestMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/user/auth.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/user/auth.middleware.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/core';\nimport { Middleware, NestMiddleware, HttpStatus } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport { SECRET } from '../config';\nimport { UserService } from './user.service';\n\n@Middleware()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UserService) {}\n\n  resolve(): (req: Request, res: Response, next: NextFunction) => void {\n\n    return async (req: Request, res: Response, next: NextFunction) => {\n      if (req.headers.authorization && (req.headers.authorization as string).split(' ')[0] === 'Token') {\n        const token = (req.headers.authorization as string).split(' ')[1];\n        const decoded: any = jwt.verify(token, SECRET);\n        const user = await this.userService.findById(decoded.id);\n\n        if (!user) {\n          throw new HttpException('User not found.', HttpStatus.UNAUTHORIZED);\n        }\n\n        req.user = user.user;\n        next();\n\n      } else {\n        throw new HttpException('Not authorized.', HttpStatus.UNAUTHORIZED);\n\n      }\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/base.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getUserIdFromToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/base.controller.ts:4\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getUserIdFromToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserIdFromToken(authorization)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/shared/base.controller.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorization\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { SECRET } from '../config';\nimport * as jwt from 'jsonwebtoken';\n\nexport class BaseController {\n\n  constructor() {}\n\n  protected getUserIdFromToken(authorization) {\n    if (!authorization) return null;\n\n    const token = authorization.split(' ')[1];\n    const decoded: any = jwt.verify(token, SECRET);\n    return decoded.id;\n  }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/comment.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                body\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        article:     ArticleEntity\n\n                    \n                \n                    \n                        \n                            Type :     ArticleEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/comment.entity.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { ArticleEntity } from './article.entity';\n\n@Entity()\nexport class Comment {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  body: string;\n\n  @ManyToOne(type => ArticleEntity, article => article.comments)\n  article: ArticleEntity;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommentsRO.html":{"url":"interfaces/CommentsRO.html","title":"interface - CommentsRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommentsRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:     Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '../user/user.interface';\nimport { ArticleEntity } from './article.entity';\ninterface Comment {\n  body: string;\n}\n\ninterface ArticleData {\n  slug: string;\n  title: string;\n  description: string;\n  body?: string;\n  tagList?: string[];\n  createdAt?: Date\n  updatedAt?: Date\n  favorited?: boolean;\n  favoritesCount?: number;\n  author?: UserData;\n}\n\nexport interface CommentsRO {\n  comments: Comment[];\n}\n\nexport interface ArticleRO {\n  article: ArticleEntity;\n}\n\nexport interface ArticlesRO {\n  articles: ArticleEntity[];\n  articlesCount: number;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                tagList\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tagList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tagList:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateArticleDto {\n  readonly title: string;\n  readonly description: string;\n  readonly body: string;\n  readonly tagList: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-comment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                body\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-comment.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCommentDto {\n  readonly body: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n\n  @IsNotEmpty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  readonly email: string;\n\n  @IsNotEmpty()\n  readonly password: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FollowsEntity.html":{"url":"classes/FollowsEntity.html","title":"class - FollowsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/follows.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followerId\n                            \n                            \n                                followingId\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followerId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        followerId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followingId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        followingId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/follows.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\nimport {IsEmail, Validate} from \"class-validator\";\nimport * as crypto from 'crypto';\nimport { CustomEmail } from '../user/CustomEmail';\n\n@Entity('follows')\nexport class FollowsEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  followerId: number;\n\n  @Column()\n  followingId: number;\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginUserDto {\n\n  @IsNotEmpty()\n  readonly email: string;\n\n  @IsNotEmpty()\n  readonly password: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profiles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                unFollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            follow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        follow(email: string, username: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Post(':username/follow')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/profile/profile.controller.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProfile(userId: number, username: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Get(':username')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/profile/profile.controller.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            unFollow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unFollow(userId: number, username: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Delete(':username/follow')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/profile/profile.controller.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n    \n\n\n    \n        import { Get, Post, Delete, Param, Controller } from '@nestjs/common';\nimport { Request } from 'express';\nimport { ProfileService } from './profile.service';\nimport { ProfileRO } from './profile.interface';\nimport { User } from '../user/user.decorator';\n\nimport {\n  ApiUseTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiUseTags('profiles')\n@Controller('profiles')\nexport class ProfileController {\n\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Get(':username')\n  async getProfile(@User('id') userId: number, @Param('username') username: string): Promise {\n    return await this.profileService.findProfile(userId, username);\n  }\n\n  @Post(':username/follow')\n  async follow(@User('email') email: string, @Param('username') username: string): Promise {\n    return await this.profileService.follow(email, username);\n  }\n\n  @Delete(':username/follow')\n  async unFollow(@User('id') userId: number,  @Param('username') username: string): Promise {\n    return await this.profileService.unFollow(userId, username);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileData.html":{"url":"interfaces/ProfileData.html","title":"interface - ProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                            Optional\n                                        following\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileData {\n  username: string;\n  bio: string;\n  image?: string;\n  following?: boolean;\n}\n\nexport interface ProfileRO {\n  profile: ProfileData;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(consumer: MiddlewaresConsumer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/profile/profile.module.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consumer\n                                                        \n                                                                    MiddlewaresConsumer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {MiddlewaresConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { ProfileController } from './profile.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProfileService } from './profile.service';\nimport { UserModule } from '../user/user.module';\nimport {UserEntity} from \"../user/user.entity\";\nimport {FollowsEntity} from \"./follows.entity\";\nimport {AuthMiddleware} from \"../user/auth.middleware\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity, FollowsEntity]), UserModule],\n  components: [ProfileService],\n  controllers: [\n    ProfileController\n  ],\n  exports: []\n})\nexport class ProfileModule implements NestModule {\n  public configure(consumer: MiddlewaresConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({path: 'profiles/:username/follow', method: RequestMethod.ALL});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileRO.html":{"url":"interfaces/ProfileRO.html","title":"interface - ProfileRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     ProfileData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProfileData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileData {\n  username: string;\n  bio: string;\n  image?: string;\n  following?: boolean;\n}\n\nexport interface ProfileRO {\n  profile: ProfileData;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            findAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findAll()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Get()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/tag/tag.controller.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n    \n\n\n    \n        import {Get, Controller } from '@nestjs/common';\n\nimport { TagEntity } from './tag.entity';\nimport { TagService } from './tag.service';\n\nimport {\n  ApiUseTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiUseTags('tags')\n@Controller('tags')\nexport class TagController {\n\n  constructor(private readonly tagService: TagService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return await this.tagService.findAll();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagEntity.html":{"url":"classes/TagEntity.html","title":"class - TagEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tag/tag.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tag:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tag/tag.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Entity, PrimaryGeneratedColumn, Column, BeforeInsert} from \"typeorm\";\nimport {IsEmail, Validate} from \"class-validator\";\nimport * as crypto from 'crypto';\nimport { CustomEmail } from './CustomEmail';\n\n@Entity('tag')\nexport class TagEntity {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  tag: string;\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagModule.html":{"url":"modules/TagModule.html","title":"module - TagModule","body":"\n                   \n\n\n\n\n    Modules\n    TagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagModule\n\n\n\ncluster_TagModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTagModule\n\nTagModule\n\nTagModule -->\n\nUserModule->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tag/tag.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(consumer: MiddlewaresConsumer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tag/tag.module.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consumer\n                                                        \n                                                                    MiddlewaresConsumer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {MiddlewaresConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from '../user/user.module';\nimport { TagService } from './tag.service';\nimport { TagEntity } from './tag.entity';\nimport { TagController } from './tag.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TagEntity]), UserModule],\n  components: [TagService],\n  controllers: [\n    TagController\n  ],\n  exports: []\n})\nexport class TagModule implements NestModule {\n  public configure(consumer: MiddlewaresConsumer) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bio\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                image\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            bio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bio:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            image\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        image:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-user.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserDto {\n  readonly username: string;\n  readonly email: string;\n  readonly bio: string;\n  readonly image: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        create(userData: CreateUserDto)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UsePipes(new ValidationPipe())@Post('users')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/user/user.controller.ts:59\n                            \n                        \n\n\n                \n                    \n                            Create a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userData\n                                                        \n                                                                    CreateUserDto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete(params)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Delete('users/:slug')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/user/user.controller.ts:68\n                            \n                        \n\n\n                \n                    \n                            Delete a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            findMe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findMe(email: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Get('user')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/user/user.controller.ts:36\n                            \n                        \n\n\n                \n                    \n                            Find a user with his email\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User email\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(loginUserDto: LoginUserDto)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UsePipes(new ValidationPipe())@Post('users/login')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/user/user.controller.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginUserDto\n                                                        \n                                                                    LoginUserDto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(userId: number, userData: UpdateUserDto)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Put('user')\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/user/user.controller.ts:46\n                            \n                        \n\n\n                \n                    \n                            Update a user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User id\n\n                                                        \n                                                \n                                                \n                                                        userData\n                                                        \n                                                                    UpdateUserDto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                User data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n    \n\n\n    \n        import {\n    Get,\n    Post,\n    Body,\n    Put,\n    Delete,\n    Param,\n    Controller,\n    UsePipes\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { UserService } from './user.service';\nimport { UserEntity } from './user.entity';\nimport { UserRO } from './user.interface';\nimport { CreateUserDto, UpdateUserDto, LoginUserDto } from './dto';\nimport { HttpException } from '@nestjs/core';\nimport { User } from './user.decorator';\nimport { ValidationPipe } from '../shared/pipes/validation.pipe';\n\nimport { ApiUseTags, ApiBearerAuth } from '@nestjs/swagger';\n\n/**\n * User controller\n */\n@ApiBearerAuth()\n@ApiUseTags('user')\n@Controller()\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n\n    /**\n     * Find a user with his email\n     * @param email User email\n     */\n    @Get('user')\n    async findMe(@User('email') email: string): Promise {\n        return await this.userService.findByEmail(email);\n    }\n\n    /**\n     * Update a user\n     * @param userId User id\n     * @param userData User data\n     */\n    @Put('user')\n    async update(\n        @User('id') userId: number,\n        @Body('user') userData: UpdateUserDto\n    ) {\n        return await this.userService.update(userId, userData);\n    }\n\n    /**\n     * Create a user\n     * @param userData User data\n     */\n    @UsePipes(new ValidationPipe())\n    @Post('users')\n    async create(@Body('user') userData: CreateUserDto) {\n        return this.userService.create(userData);\n    }\n\n    /**\n     * Delete a user\n     * @param params\n     */\n    @Delete('users/:slug')\n    async delete(@Param() params) {\n        return await this.userService.delete(params.slug);\n    }\n\n    @UsePipes(new ValidationPipe())\n    @Post('users/login')\n    async login(@Body('user') loginUserDto: LoginUserDto): Promise {\n        const _user = await this.userService.findOne(loginUserDto);\n\n        const errors = { User: ' not found' };\n        if (!_user) throw new HttpException({ errors }, 401);\n\n        const token = await this.userService.generateJWT(_user);\n        const { email, username, bio, image } = _user;\n        const user = { email, token, username, bio, image };\n        return { user };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Biography\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    User avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Personal token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n    /**\n     * Username\n     */\n    username: string;\n    /**\n     * Email\n     */\n    email: string;\n    /**\n     * Personal token\n     */\n    token: string;\n    /**\n     * Biography\n     */\n    bio: string;\n    /**\n     * User avatar\n     */\n    image?: string;\n}\n\nexport interface UserRO {\n    user: UserData;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                User entity\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                            \n                                bio\n                            \n                            \n                                email\n                            \n                            \n                                favorites\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        articles:     ArticleEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     ArticleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:59\n                            \n                        \n\n                \n                    \n                        Link with his articles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bio:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        favorites:     ArticleEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     ArticleEntity[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        image:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:42\n                            \n                        \n\n                \n                    \n                        Password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:26\n                            \n                        \n\n                \n                    \n                        Username\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hashPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nhashPassword()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @BeforeInsert()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/user/user.entity.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Entity,\n    PrimaryGeneratedColumn,\n    Column,\n    BeforeInsert,\n    JoinTable,\n    ManyToMany,\n    OneToMany\n} from 'typeorm';\nimport { IsEmail, Validate } from 'class-validator';\nimport * as crypto from 'crypto';\nimport { ArticleEntity } from '../article/article.entity';\n\n/**\n * User entity\n */\n@Entity('user')\nexport class UserEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * Username\n     */\n    @Column()\n    username: string;\n\n    @Column()\n    @IsEmail()\n    email: string;\n\n    @Column({ default: '' })\n    bio: string;\n\n    @Column({ default: '' })\n    image: string;\n\n    /**\n     * Password\n     */\n    @Column()\n    password: string;\n\n    @BeforeInsert()\n    hashPassword() {\n        this.password = crypto\n            .createHmac('sha256', this.password)\n            .digest('hex');\n    }\n\n    @ManyToMany(type => ArticleEntity)\n    @JoinTable()\n    favorites: ArticleEntity[];\n\n    /**\n     * Link with his articles\n     */\n    @OneToMany(type => ArticleEntity, article => article.author)\n    articles: ArticleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(consumer: MiddlewaresConsumer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/user/user.module.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consumer\n                                                        \n                                                                    MiddlewaresConsumer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {MiddlewaresConsumer, Module, NestModule, RequestMethod} from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './user.entity';\nimport { UserService } from './user.service';\nimport { AuthMiddleware } from './auth.middleware';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  components: [UserService],\n  controllers: [\n    UserController\n  ],\n  exports: [UserService]\n})\nexport class UserModule implements NestModule {\n  public configure(consumer: MiddlewaresConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({path: 'user', method: RequestMethod.GET}, {path: 'user', method: RequestMethod.PUT});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRO.html":{"url":"interfaces/UserRO.html","title":"interface - UserRO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserRO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n    /**\n     * Username\n     */\n    username: string;\n    /**\n     * Email\n     */\n    email: string;\n    /**\n     * Personal token\n     */\n    token: string;\n    /**\n     * Biography\n     */\n    bio: string;\n    /**\n     * User avatar\n     */\n    image?: string;\n}\n\nexport interface UserRO {\n    user: UserData;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ValidationPipe.html":{"url":"pipes/ValidationPipe.html","title":"pipe - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/pipes/validation.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildError(errors)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/shared/pipes/validation.pipe.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toValidate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toValidate(metatype)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/shared/pipes/validation.pipe.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metatype\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(value, metadata: ArgumentMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/shared/pipes/validation.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    ArgumentMetadata\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {PipeTransform, Pipe, ArgumentMetadata, BadRequestException, HttpStatus} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport {HttpException} from \"@nestjs/common/exceptions/http.exception\";\n\n@Pipe()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value, metadata: ArgumentMetadata) {\n\n    if (!value) {\n      throw new BadRequestException('No data submitted');\n    }\n\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException({message: 'Input data validation failed', errors:  this.buildError(errors)}, HttpStatus.BAD_REQUEST);\n    }\n    return value;\n  }\n\n  private buildError(errors) {\n    const result = {};\n    errors.forEach(el => {\n      let prop = el.property;\n      Object.entries(el.constraints).forEach(constraint => {\n        result[prop + constraint[0]] = `${constraint[1]}`;\n      });\n    });\n    return result;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find((type) => metatype === type);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/article/article.entity.ts\n            \n            \n                class\n            \n            \n                ArticleEntity\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            \n                interface\n            \n            \n                ArticleData\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            \n                interface\n            \n            \n                ArticleRO\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            \n                interface\n            \n            \n                ArticlesRO\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            \n                interface\n            \n            \n                Comment\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.interface.ts\n            \n            \n                interface\n            \n            \n                CommentsRO\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            \n                variable\n            \n            \n                slug\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/article/comment.entity.ts\n            \n            \n                class\n            \n            \n                Comment\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/article/dto/create-article.dto.ts\n            \n            \n                class\n            \n            \n                CreateArticleDto\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/article/dto/create-comment.ts\n            \n            \n                class\n            \n            \n                CreateCommentDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            \n                function\n            \n            \n                bootstrap\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/follows.entity.ts\n            \n            \n                class\n            \n            \n                FollowsEntity\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.interface.ts\n            \n            \n                interface\n            \n            \n                ProfileData\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profile/profile.interface.ts\n            \n            \n                interface\n            \n            \n                ProfileRO\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/base.controller.ts\n            \n            \n                class\n            \n            \n                BaseController\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/pipes/validation.pipe.ts\n            \n            \n                pipe\n            \n            \n                ValidationPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tag/tag.entity.ts\n            \n            \n                class\n            \n            \n                TagEntity\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/auth.middleware.ts\n            \n            \n                class\n            \n            \n                AuthMiddleware\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            \n                class\n            \n            \n                CreateUserDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            \n                class\n            \n            \n                LoginUserDto\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            \n                class\n            \n            \n                UpdateUserDto\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.decorator.ts\n            \n            \n                variable\n            \n            \n                User\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            \n                class\n            \n            \n                UserEntity\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            \n                interface\n            \n            \n                UserData\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            \n                interface\n            \n            \n                UserRO\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            \n                variable\n            \n            \n                jwt\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bootstrap\n                            \n                            \n                        \n                    \n                \n                \n                    \nbootstrap()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCompodoc Demo Nest\nLive demo\nThis project was forked from https://github.com/lujakob/nestjs-realworld-example-app\nIt is a demo project for demonstrating Compodoc features :\n\narchitecture\ncontrollers documentation\nembedding images\ndocumentating methods and properties of components, classes, interfaces, etc...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Compodoc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationModule\n\n\n\ncluster_ApplicationModule_imports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nApplicationModule\n\nApplicationModule\n\nApplicationModule -->\n\nArticleModule->ApplicationModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nApplicationModule -->\n\nProfileModule->ApplicationModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nApplicationModule -->\n\nTagModule->ApplicationModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nArticleModule -->\n\nUserModule->ArticleModule\n\n\n\nProfileModule -->\n\nUserModule->ProfileModule\n\n\n\nTagModule -->\n\nUserModule->TagModule\n\n\n\nApplicationModule -->\n\nUserModule->ApplicationModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt   (src/.../user.service.ts)\n                        \n                        \n                            slug   (src/.../article.service.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jwt:     \n\n                    \n                \n                    \n                        \n                            Default value : require('jsonwebtoken')\n                        \n                    \n\n\n            \n        \n\n    src/article/article.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slug:     \n\n                    \n                \n                    \n                        \n                            Default value : require('slug')\n                        \n                    \n\n\n            \n        \n\n    src/user/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        User:     \n\n                    \n                \n                    \n                        \n                            Default value : createRouteParamDecorator((data, req) => {\n\n  // if route is protected, there is a user set in auth.middleware\n  if (!!req.user) {\n    return !!data ? req.user[data] : req.user;\n  };\n\n  // in case a route is not protected, we still want to get the optional auth user from jwt\n  const token = req.headers.authorization ? (req.headers.authorization as string).split(' ') : null;\n  if (token && token[1]) {\n    const decoded: any = jwt.verify(token[1], SECRET);\n    return !!data ? decoded[data] : decoded.user;\n  }\n\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
